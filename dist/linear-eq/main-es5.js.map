{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/pages/entry/entry.component.ts","webpack:///src/app/pages/entry/entry.component.html","webpack:///src/app/pages/read-matrix/read-matrix.component.ts","webpack:///src/app/pages/read-matrix/read-matrix.component.html","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","routes","AppRoutingModule","forRoot","imports","AppComponent","event","readComponent","writeInputs","readMatrixCall","selector","templateUrl","styleUrls","AppModule","declarations","providers","bootstrap","EntryComponent","nRows","parseInt","entryForm","value","nMatrix","mCol","mMatrix","nRowsTab","mColTab","i","push","j","matrixArr","console","log","emit","readMatrix","ReadMatrixComponent","entryArr","nRowsArr","mColArr","environment","production","bootstrapModule","err","error"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\n\nconst routes: Routes = [];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { ReadMatrixComponent } from './pages/read-matrix/read-matrix.component';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss'],\n})\nexport class AppComponent implements OnInit{\n  @ViewChild('readComponent') readComponent: ReadMatrixComponent;\n\n  ngOnInit() {}\n\n  readMatrixCall(event) {\n    this.readComponent.writeInputs(event);\n  }\n\n}\n","<app-entry #entryComponent (readMatrixCall)=\"readMatrixCall($event)\"></app-entry>\n<app-read-matrix #readComponent></app-read-matrix>\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { EntryComponent } from './pages/entry/entry.component';\nimport { FormsModule } from '@angular/forms';\nimport { ReadMatrixComponent } from './pages/read-matrix/read-matrix.component';\n\n@NgModule({\n  declarations: [AppComponent, EntryComponent, ReadMatrixComponent],\n  imports: [BrowserModule, AppRoutingModule, FormsModule],\n  providers: [],\n  bootstrap: [AppComponent],\n})\nexport class AppModule {}\n","import { Component, OnInit, Output, ViewChild, EventEmitter } from '@angular/core';\n\n@Component({\n  selector: 'app-entry',\n  templateUrl: './entry.component.html',\n  styleUrls: ['./entry.component.scss'],\n})\nexport class EntryComponent implements OnInit {\n  @ViewChild('entryForm') entryForm: EntryComponent;\n  @Output() readMatrixCall = new EventEmitter<number[][]>();\n\n  value: any;\n\n  constructor() {}\n\n  ngOnInit(): void {}\n\n  readMatrix() {\n    let nRows = parseInt(this.entryForm.value.nMatrix);\n    let mCol = parseInt(this.entryForm.value.mMatrix);\n\n    let nRowsTab: number[] = [];\n    let mColTab: number[] = [];\n\n    for (let i = 0; i < nRows; i++) {\n      nRowsTab.push(0);\n    }\n\n    for (let j = 0; j < mCol; j++) {\n      mColTab.push(0);\n    }\n\n    let matrixArr = [nRowsTab, mColTab];\n    console.log(matrixArr);\n\n    this.readMatrixCall.emit(matrixArr);\n  }\n}\n","<form #entryForm=\"ngForm\">\n  <label for=\"nMatrix\">Wiersze N:</label>\n  <input ngModel type=\"number\" name=\"nMatrix\" id=\"nMatrix\">\n\n  <label for=\"mMatrix\">Kolumny M:</label>\n  <input ngModel type=\"number\" name=\"mMatrix\" id=\"mMatrix\">\n\n  <button test (click)=\"readMatrix()\">Submit</button>\n</form>\n","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { EntryComponent } from '../entry/entry.component';\n\n@Component({\n  selector: 'app-read-matrix',\n  templateUrl: './read-matrix.component.html',\n  styleUrls: ['./read-matrix.component.scss'],\n})\nexport class ReadMatrixComponent implements OnInit {\n  constructor() {}\n\n  ngOnInit() {}\n\n  nRowsArr: number[];\n  mColArr: number[];\n\n  writeInputs(entryArr) {\n    this.nRowsArr = entryArr[0];\n    this.mColArr = entryArr[1];\n  }\n}\n","<div *ngFor=\"let col of mColArr\">\n  <input type=\"text\" *ngFor=\"let row of nRowsArr; let i = index;\" name=row{{i}} value=\"0\">\n  <br>\n</div>\n\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}